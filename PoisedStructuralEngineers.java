package task24;
import java.util.*;
import java.io.FileWriter;
/**
 * 
 * @author Mamela Jikwana
 *
 */
public class PoisedStructuralEngineers 
{
	public static void main(String[] args)

	{
		//initialize variables, list, class and scanner
		ArrayList<Projects> ProjectArray = new ArrayList<Projects>();
		ProjectStatus status = new ProjectStatus();
		ProjectEditor edit = new ProjectEditor();
		Scanner scanner = new Scanner(System.in);
		int option;	
		String buildingType;
		int projectNumber;
		String projectName;
		double projectFees;
		double feesPaidToDate;
		String projectPhysicalAddress;
		String erfNumber;
		String dueDate;
		person client;
		person architect;
		person contractor;

		//welcome note
		System.out.println("------- WELCOME TO POISED STRUCUTRAL ENGINEERS PROJECT MANAGEMENT SYSTEM -------------");
		try
		{
			while (true)	
			{	//display menu option to user
				System.out.println("\nWould you like to:"
						+ "\n1. Add new project."
						+ "\n2. Update or Finalise project."
						+ "\n3. Project Status."
						+ "\n0. Quit");
				option = scanner.nextInt(); 

				switch(option)
				{
				//if option 1 is selected. Allow the user to add a new project, include client, contractor and architect contact details
				case 1:	
					// create new client object 				 
					client = new person("client",scanner);

					// create new contractor object				 
					contractor = new person("contractor", scanner);		

					// create new architect object 
					architect = new person("architect", scanner);

					//project information
					System.out.println("Please enter project number: ");
					projectNumber = scanner.nextInt();

					System.out.println("Please enter builing type: ");
					buildingType = scanner.next();

					//if the user enters 'no' autogenerate a project name by adding the building type and clients surname
					System.out.println("Please enter the project name. If there is no project name enter 'no' and one will be autogenerated for you");
					String createdProjectName = scanner.next();

					if (createdProjectName.equalsIgnoreCase("no")) {
						projectName = buildingType + " " + client.surname;
					} 
					else 
					{
						projectName = createdProjectName;
					}

					System.out.println("Please enter project physical address: ");
					projectPhysicalAddress = scanner.nextLine();

					scanner.nextLine();
					System.out.println("Please enter erf number: "); 
					erfNumber = scanner.next();

					System.out.println("Please enter project fees: "); 
					projectFees = scanner.nextDouble();

					System.out.println("Please enter fees paid to date (numeric values only): "); 
					feesPaidToDate = scanner.nextDouble();

					scanner.nextLine();
					System.out.println("Please enter due date(dd/MM/YYYY): "); 
					dueDate = scanner.nextLine();

					/*
					 * create new project object 
					 * add project to the list 
					 * The above will write the data of the project object to the file of projects.txt 
					 * close the writer and file.
					 */

					Projects createdProject = new Projects(projectNumber, projectName, buildingType, projectPhysicalAddress, 
							erfNumber,	projectFees, feesPaidToDate, dueDate,client, contractor, architect);
					ProjectArray.add(createdProject);

					try {
						for (int i = 0; i < ProjectArray.size(); i++) {

							FileWriter myWriter = new FileWriter(
									"projects.txt",true);
							myWriter.write(ProjectArray.get(i).projectNumber + "," 
									+ ProjectArray.get(i).projectName + ","
									+ ProjectArray.get(i).buildingType + "," 
									+ ProjectArray.get(i).projectPhysicalAddress + ","
									+ ProjectArray.get(i).erfNumber + "," 
									+ ProjectArray.get(i).projectFees + ","
									+ ProjectArray.get(i).feesPaidToDate + "," 
									+ ProjectArray.get(i).dueDate + ","
									+ ProjectArray.get(i).architect.name + "," 
									+ ProjectArray.get(i).architect.surname + ","
									+ ProjectArray.get(i).architect.telephoneNumber + ","
									+ ProjectArray.get(i).architect.emailAddress + ","
									+ ProjectArray.get(i).architect.physicalAddress + "," 
									+ ProjectArray.get(i).client.name+ "," 
									+ ProjectArray.get(i).client.surname + ","
									+ ProjectArray.get(i).client.telephoneNumber + ","
									+ ProjectArray.get(i).client.emailAddress + ","
									+ ProjectArray.get(i).client.physicalAddress + "," 
									+ ProjectArray.get(i).contractor.name + "," 
									+ ProjectArray.get(i).contractor.surname + ","
									+ ProjectArray.get(i).contractor.telephoneNumber + ","
									+ ProjectArray.get(i).contractor.emailAddress + ","
									+ ProjectArray.get(i).contractor.physicalAddress + "\n");
							myWriter.close();
							System.out.println("Successfully wrote to the file.");
						}
						//use the try catch exception handler, should any errors occur the message written below will be displayed
					} catch (Exception e) {
						System.out.println("An error occurred.");
					}
					System.out.println("\nNew project has been created!");			
					//display newly added project to the screen
					System.out.println(createdProject.toString());
					break;

					//if option 2 is selected the user will be allowed to edit the due date, fees paid to date, 
					//contractor details and finalise the project
				case 2:		
					edit.editProject(scanner);
					break;

					//if option 3 is selected the user will be allowed to search for a project and see which projects are overdue and ongoing	
				case 3:
					status.projectPosition(scanner);
					break;
					//if user wishes to exit
				case 0:
					break;	

				default:
					System.out.println("Please make valid selection");
				}
			}
		}
		//use the try catch exception handler, should any errors occur the message written below will be displayed
		catch (Exception e) 
		{
			System.out.println("Invalid input. Please ensure you enter a numeric value.");
		}
	}
}